

JAVA7.0
========


JAVA7.0 Programming  Language   is otherwise  known  as  OAKJAVA

(JAVA7)  which is  invented by  wilmix jemin  j  at  year  2013 

in  java ,DOTWEB3.0 and  C#.


JAVA7.0   is  used   instead   of  java(jdk1.7)  and  jdk1.8.

This   two  versions  of  JAVA  (Jdk1.8,jdk1.7 )  failed  that  is  using  JAD  decompiler  we  can   easily  take   the  source   code.. 






DEMERITS  of JAVA and  C#
=======================

a) JAVA  class  file   has  many demerits  so  any thing  you create  a compiler  in  java
the source  code  can  be  easily  taken  by JAD.

b)  C#  (.exe  or  .dll)  source code can  also  be  taken  using  code  reflector.

That's  why   JAVA7.0  is  focused.

JAVA7.0 is a  OAK  jAVA  for creating  datastructures  

and    compilers.

JAVA7.0  accepts  ".java"   filename  and  translate  to  .class file.

that  java  is  said  to  oak  java  different  from  orginal java; which  is   not understood  by hackers.


JAVA7.0  loads    .dll in   memory  to create  a  Prototype  software. 


    
SYNTAX-1:
=======

<WEB>
<USE> packages;
<PACK> packagename
{

    <CLASS> Boxtester
   {
      public void main()
      {
        <! source  code !>
      }
   }
}


SYNTAX-2
========


filename: javas.java (kindly  save  filename  as  javas.java)
===========================================

example:
=========


 class oakjava1

{

 void  display() 

{

System.out.println("wilmix is going");
}

}
class oakjava2

{

protected static void  main(String args[]) //  it  means it cannot  be  run   in   jdk1.8 compiler

{

oakjava1 o  = new  oakjava1();
System.out.println("wilmix is going");
}

}


Explanation:
============


This   java  program   will   compile    using 

(OAKJAvA) ojavac filename.java  but  it won't  compile  in  jdk1.8  and  other  versions.

producing  output   wilmix  is   going





Note:  java  compiles  if  class  name  and  filename  is  same

but  oak java (JAVA7.0) compiles  if  class  name  and  filename  is not same is  the  major  difference.


Program-1:
==========
<WEB>

<PACK> BoxAN
{
   <CLASS> Box
   {
      private double length;   // Length of a box
      private double breadth;  // Breadth of a box
      private double height;   // Height of a box
      public void setLength( double len )
      {
         length = len;
      }
      
      public void setBreadth( double bre )
      {
         breadth = bre;

      }
      
      public void setHeight( double hei )
      {
         height = hei;
      }
      public double getVolume()
      {
         return length * breadth * height;
      }
   }
    <CLASS> Boxtest
   {
      public void main()
      {
         Box Box1 <NEW> Box();   // Declare Box1 of type Box
         Box Box2 <NEW> Box();

         double volume;
         
         // Declare Box2 of type Box
         // box 1 specification
         Box1.setLength(6.0);
         Box1.setBreadth(7.0);
         Box1.setHeight(5.0);
         
         // box 2 specification
         Box2.setLength(12.0);
         Box2.setBreadth(13.0);
         Box2.setHeight(10.0);
         
         // volume of box 1
         volume = Box1.getVolume();
      <PRINTLN>("Volume of Box1 :" ,volume); //print  the  volume
         
         // volume of box 2
         volume = Box2.getVolume();
          <PRINTLN>("Volume of Box2 : {0}", volume);//print  the volume
         
  
      }
   }
}



JAVA7 collection
=============


can  java  program  call  .exe  and   pass  arguments  to  that  ?

Is  it possible  ?

No, it  is  not  possible   in  other  java  versions  ,  but  it  is   possible  in  java7(oakjava)




import  Security.*;  


class Box
   {
      private double length;   // Length of a box
      private double breadth;  // Breadth of a box
      private double height;   // Height of a box

      public double getVolume()
      {
         return length * breadth * height;
      }
      
      public void setLength( double len )
      {
         length = len;
      }

      public void setBreadth( double bre )
      {
         breadth = bre;
      }

      public void setHeight( double hei )
      {
         height = hei;
      }
      
      
      

   }
 class Tester
   { 
      protected static void main(String[] args) throws BiffException ,Exception
      {
         Box Box1 = new Box();   // Declare Box1 of type Box
         Box Box2 = new Box();   // Declare Box2 of type Box
         Box Box3 = new Box();   // Declare Box3 of type Box
         double volume = 0.0;    // Store the volume of a box here


         // box 1 specification
         Box1.setLength(6.0);
         Box1.setBreadth(7.0);
         Box1.setHeight(5.0);

         // box 2 specification
         Box2.setLength(12.0);
         Box2.setBreadth(13.0);
         Box2.setHeight(10.0);

         // volume of box 1
         volume = Box1.getVolume();
         System.out.println("Volume of Box1 : {0}"+ volume);

         // volume of box 2
         volume = Box2.getVolume();
            System.out.println("Volume of Box2 : {0}"+ volume);

         // Add two object as follows:
    

         // volume of box 3
         volume = Box3.getVolume();
            System.out.println("Volume of Box3 : {0}"+ volume);



String  a="2000";


//  pass  2000   to  java7collectionquery  and  execute  Programs1.web.exe  program


and  store  it  in  modelclass  obj

Java7Collection.QUERY(a+"" ,"Programs1.web");


//print  the   result   from  result  object

System.out.println("RESULT="+Java7Collection.RetrieveQUERY());

   
      }
   }




Now  write   Programs1.web  program for  that
=============================================


<WEB>

<USE> CDollar.IO;
<USE> CUTIL;
<PACK> BoxApplication //pack  means   namespace
{
   <CLASS> Box
   {
      private double length;   // Length of a box
      private double breadth;  // Breadth of a box
      private double height;   // Height of a box
      public void setLength( double len )
      <%
         length = len;
      }
      
      public void setBreadth( double bre )
     <%
         breadth = bre;
      }
      
      public void setHeight( double hei )
    <%
         height = hei;
      }
      public double getVolume()
     <%
         return length * breadth * height;
      }
   }
    <CLASS> Boxtester
   {
      public void main()
      {
         Box Box1 <NEW> Box();   // Declare Box1 of type Box
         Box Box2 <NEW> Box();

         double volume;
         
         // Declare Box2 of type Box
         // box 1 specification
         Box1.setLength(6.0);
         Box1.setBreadth(7.0);
         Box1.setHeight(5.0);
         
         // box 2 specification
         Box2.setLength(12.0);
         Box2.setBreadth(13.0);
         Box2.setHeight(10.0);
         
         // volume of box 1
         volume = Box1.getVolume();
     <PRINTLN>("Volume of Box1 :" +volume);
         
         // volume of box 2
         volume = Box2.getVolume();
         // <PRINTLN>("Volume of Box2 : {0}", volume);
         
        
         ArrayList x <NEW> ArrayList();
      
      // test size
         <PRINTLN>("Initial size is " + x.size());
      
      // test isEmpty
         if (x.isEmpty())
            <PRINTLN>("The list is empty");
         else <PRINTLN>("The list is not empty");
      
      // test put
         x.add(0, Java7Collection.QUERY());//  retrieve  from  model class
         x.add(1, (6));
         x.add(0, (1));
         x.add(2, (4));
         <PRINTLN>("List size is " + x.size());
      
      // test toString
         <PRINTLN>("The list is " + x);


Java7Collection.InsertQUERY(x.ToString());//  store  it  in  result  object
      
      // test indexOf
         int index = x.indexOf((4));
         if (index < 0)
            <PRINTLN>("4 not found");
         else <PRINTLN>("The index of 4 is " + index);
      
         index = x.indexOf((3));
         if (index < 0)
            <PRINTLN>("3 not found");
         else <PRINTLN>("The index of 3 is " + index);
      
      // test get
         <PRINTLN>("Element at 0 is " + x.get(0));
         <PRINTLN>("Element at 3 is " + x.get(3));
      
      // test remove
         <PRINTLN>(x.remove(1) + " removed");
         <PRINTLN>("The list is " + x);
         <PRINTLN>(x.remove(2) + " removed");
         <PRINTLN>("The list is " + x);
      
         if (x.isEmpty())
            <PRINTLN>("The list is empty");
         else <PRINTLN>("The list is not empty");
      
         <PRINTLN>("List size is " + x.size());

  
      }
   }
}



output:
=======

IT  produces .exe  file.

What  did  you notice  ?

It  merge .exe  and  .class  file   output  to single  output....





JAVA7 Type -3
============




<JAVA>





<PACK> BoxApplication
{
   <CLASS> Box
   {
      private double length;   // Length of a box
      private double breadth;  // Breadth of a box
      private double height;   // Height of a box
      public void setLength( double len )
      {
         length = len;
      }
      
      public void setBreadth( double bre )
      {
         breadth = bre;
      }
      
      public void setHeight( double hei )
      {
         height = hei;
      }
      public double getVolume()
      {
         return length * breadth * height;
      }
   }
   <CLASS> Boxtester
   {
      public void  main()
      {
         Box Box1 <NEW> Box();   // Declare Box1 of type Box
         Box Box2 <NEW> Box();
         double volume;
         
         // Declare Box2 of type Box
         // box 1 specification
         Box1.setLength(6.0);
         Box1.setBreadth(7.0);
         Box1.setHeight(5.0);
         
         // box 2 specification
         Box2.setLength(12.0);
         Box2.setBreadth(13.0);
         Box2.setHeight(10.0);
         
         // volume of box 1
         volume = Box1.getVolume();
         <PRINTLN>("Volume of Box1 : {0}" ,volume);
         
         // volume of box 2
         volume = Box2.getVolume();
         <PRINTLN>("Volume of Box2 : {0}", volume);
         
        <READLN> //read  from console




      }
   }


</JAVA>





note:  It  produces .exe  




Note:  kindly  visit   our  
----
tutorial   website  ie  )
https://sites.google.com/site/oakjava7programminglanguage/
